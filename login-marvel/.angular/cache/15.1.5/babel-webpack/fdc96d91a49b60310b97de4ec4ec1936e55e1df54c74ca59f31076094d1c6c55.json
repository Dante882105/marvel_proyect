{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/service/conections.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nfunction RegisterComponent_small_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 40);\n    i0.ɵɵtext(1, \"Do not use special characters (#, $, *, etc.) or type more than 4 and less than 40 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_small_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 40);\n    i0.ɵɵtext(1, \"Do not use special characters (#, $, *, etc.) or type more than 4 and less than 40 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_small_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 40);\n    i0.ɵɵtext(1, \"Please do not use special characters (#, $, *, etc.) or type more than 2 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_small_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 40);\n    i0.ɵɵtext(1, \"Username is invalid, please do not use special characters (#, $, *, etc.) or type more than 4 and less than 15 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_small_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 40);\n    i0.ɵɵtext(1, \"Verify your e-mail\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_small_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 40);\n    i0.ɵɵtext(1, \"The password is invalid, try a password greater than 4 and less than 15 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_small_56_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 40);\n    i0.ɵɵtext(1, \"The passwords don't match\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_p_72_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r7.info.message);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"bi bi-x-circle-fill red\": a0\n  };\n};\nexport class RegisterComponent {\n  constructor(fb, _conectionsService) {\n    this.fb = fb;\n    this._conectionsService = _conectionsService;\n  }\n  ngOnInit() {\n    this.singnUpForm = this.initForm();\n  }\n  get nameValidation() {\n    return this.singnUpForm.get('firstName')?.invalid && this.singnUpForm.get('firstName')?.touched;\n  }\n  get lastNameValidation() {\n    return this.singnUpForm.get('lastName')?.invalid && this.singnUpForm.get('lastName')?.touched;\n  }\n  get companyValidation() {\n    return this.singnUpForm.get('company')?.invalid && this.singnUpForm.get('company')?.touched;\n  }\n  get mailValidation() {\n    return this.singnUpForm.get('email')?.invalid && this.singnUpForm.get('email')?.touched;\n  }\n  get usernameValidation() {\n    return this.singnUpForm.get('username')?.invalid && this.singnUpForm.get('username')?.touched;\n  }\n  get passwordValidation() {\n    return this.singnUpForm.get('password')?.invalid && this.singnUpForm.get('password')?.touched;\n  }\n  get confPasswordValidation() {\n    return this.singnUpForm.get('confPassword')?.invalid && this.singnUpForm.get('confPassword')?.touched;\n  }\n  onSubmit() {\n    console.log(\"form => Enviado\", this.singnUpForm);\n    this.passInvalid();\n    if (this.singnUpForm.invalid) {\n      return Object.values(this.singnUpForm.controls).forEach(control => {\n        control.markAllAsTouched();\n      });\n    }\n    this._conectionsService.singnUp(this.singnUpForm.value).subscribe({\n      next: response => {\n        this.info = response;\n        this.singnUpForm.reset();\n      },\n      error: error => {\n        console.log('error linea 69 registro', error);\n      }\n    });\n  }\n  passInvalid() {\n    const passOne = this.singnUpForm.get('password')?.value;\n    const passTow = this.singnUpForm.get('confPassword')?.value;\n    if (passOne != passTow) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  initForm() {\n    return this.fb.group({\n      firstName: ['', [Validators.required, Validators.pattern(/^[a-zA-ZÁ-ÿ\\s]{4,40}$/)]],\n      lastName: ['', [Validators.required, Validators.pattern(/^[a-zA-ZÁ-ÿ\\s]{4,40}$/)]],\n      company: ['', [Validators.required, Validators.pattern(/^[a-zA-ZÁ-ÿ0-9\\.\\ ]{2,15}$/)]],\n      email: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/)]],\n      username: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9\\_\\-]{4,15}$/)]],\n      password: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9\\_\\-\\#\\.\\*\\@]{4,15}$/)]],\n      confPassword: ['', [Validators.required]]\n    }, {\n      Validators: this.samePasswords('password', 'confPassword')\n    });\n  }\n  samePasswords(passOne, passTow) {\n    return formGroup => {\n      const passOneControl = formGroup.get(passOne);\n      const passTowControl = formGroup.get(passTow);\n      if (passOneControl?.value === passTowControl?.value) {\n        passTowControl?.setErrors(null);\n      } else {\n        passTowControl?.setErrors({\n          noEsIgual: true\n        });\n      }\n    };\n  }\n  checkMail(mail) {\n    this._conectionsService.findMail(mail).subscribe({\n      next: response => {\n        console.log(response.message);\n        return response.status;\n      },\n      error: error => {\n        console.log('linea 126 Todo bien');\n      }\n    });\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ConectionsService));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 78,\n  vars: 31,\n  consts: [[\"id\", \"record\", 1, \"d-flex\", \"justify-content-center\", \"align-items-center\"], [\"id\", \"sign-up\", 1, \"col-8\", \"mx-auto\", \"rounded\", \"pt-3\", \"pb-3\"], [\"id\", \"register\", 3, \"formGroup\", \"ngSubmit\"], [1, \"text-center\", \"mb-3\"], [1, \"d-flex\", \"flex-row\", \"px-0\"], [1, \"px-0\", \"container-fluid\", \"text-center\", \"mx-auto\"], [1, \"list-group-item\", \"input\"], [\"for\", \"name\", 1, \"text-center\"], [\"type\", \"text\", \"placeholder\", \"Name\", \"name\", \"name\", \"id\", \"name\", \"formControlName\", \"firstName\", 1, \"rounded-bottom\"], [3, \"ngClass\"], [\"class\", \"text-warning\", 4, \"ngIf\"], [\"for\", \"lastName\", 1, \"text-center\"], [\"type\", \"text\", \"placeholder\", \"Last Name\", \"name\", \"lastName\", \"id\", \"lastName\", \"formControlName\", \"lastName\", 1, \"rounded-bottom\"], [\"for\", \"company\", 1, \"text-center\"], [\"type\", \"text\", \"placeholder\", \"Company\", \"name\", \"company\", \"id\", \"company\", \"formControlName\", \"company\", 1, \"rounded-bottom\"], [\"for\", \"username\", 1, \"text-center\"], [\"type\", \"text\", \"placeholder\", \"Username\", \"name\", \"user_name\", \"id\", \"username\", \"formControlName\", \"username\", 1, \"rounded-bottom\"], [\"for\", \"mail\", 1, \"text-center\"], [\"type\", \"text\", \"placeholder\", \"E-mail\", \"name\", \"mail\", \"id\", \"mail\", \"formControlName\", \"email\", 1, \"rounded-bottom\"], [\"for\", \"user_password\", 1, \"text-center\"], [\"type\", \"password\", \"placeholder\", \"Password\", \"name\", \"user_password\", \"id\", \"password\", \"formControlName\", \"password\", 1, \"rounded-bottom\"], [\"for\", \"confPass\", 1, \"text-center\"], [\"type\", \"password\", \"placeholder\", \"Confirm your Password\", \"name\", \"confPassword\", \"id\", \"confPassword\", \"formControlName\", \"confPassword\", 1, \"rounded-bottom\"], [1, \"\", 3, \"ngClass\"], [1, \"list-group-item\"], [\"type\", \"submit\", \"value\", \"SEND\", \"name\", \"send\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#staticBackdrop\", 1, \"mx-auto\", \"d-block\", 3, \"disabled\"], [1, \"redirect\"], [1, \"text-center\"], [\"role\", \"button\", \"routerLink\", \"/login\", 1, \"text-decoration-underline\"], [\"id\", \"staticBackdrop\", \"data-bs-backdrop\", \"static\", \"data-bs-keyboard\", \"false\", \"tabindex\", \"-1\", \"aria-labelledby\", \"staticBackdropLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"staticBackdropLabel\", 1, \"modal-title\", \"fs-5\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [4, \"ngIf\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\"], [\"type\", \"button\", \"routerLink\", \"/home\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-primary\"], [1, \"text-warning\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"h2\", 3);\n      i0.ɵɵtext(4, \"SINGN UP\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"ul\", 4)(6, \"div\", 5)(7, \"li\", 6)(8, \"label\", 7);\n      i0.ɵɵtext(9, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 8)(11, \"i\", 9)(12, \"br\");\n      i0.ɵɵtemplate(13, RegisterComponent_small_13_Template, 2, 0, \"small\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"li\", 6)(15, \"label\", 11);\n      i0.ɵɵtext(16, \"Last Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 12)(18, \"i\", 9)(19, \"br\");\n      i0.ɵɵtemplate(20, RegisterComponent_small_20_Template, 2, 0, \"small\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"li\", 6)(22, \"label\", 13);\n      i0.ɵɵtext(23, \"Company\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(24, \"input\", 14)(25, \"i\", 9)(26, \"br\");\n      i0.ɵɵtemplate(27, RegisterComponent_small_27_Template, 2, 0, \"small\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"li\", 6)(29, \"label\", 15);\n      i0.ɵɵtext(30, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(31, \"input\", 16)(32, \"i\", 9)(33, \"br\");\n      i0.ɵɵtemplate(34, RegisterComponent_small_34_Template, 2, 0, \"small\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(35, \"div\", 5)(36, \"li\", 6)(37, \"label\", 17);\n      i0.ɵɵtext(38, \"E-Mail\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(39, \"input\", 18)(40, \"i\", 9)(41, \"br\");\n      i0.ɵɵtemplate(42, RegisterComponent_small_42_Template, 2, 0, \"small\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"li\", 6)(44, \"label\", 19);\n      i0.ɵɵtext(45, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(46, \"input\", 20)(47, \"i\", 9)(48, \"br\");\n      i0.ɵɵtemplate(49, RegisterComponent_small_49_Template, 2, 0, \"small\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(50, \"li\", 6)(51, \"label\", 21);\n      i0.ɵɵtext(52, \"Confirm your Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(53, \"input\", 22)(54, \"i\", 23)(55, \"br\");\n      i0.ɵɵtemplate(56, RegisterComponent_small_56_Template, 2, 0, \"small\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(57, \"li\", 24);\n      i0.ɵɵelement(58, \"input\", 25);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(59, \"div\", 26)(60, \"p\", 27);\n      i0.ɵɵtext(61, \"If you already have an account, \");\n      i0.ɵɵelementStart(62, \"strong\", 28);\n      i0.ɵɵtext(63, \"log in here\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(64, \"div\", 29)(65, \"div\", 30)(66, \"div\", 31)(67, \"div\", 32)(68, \"h1\", 33);\n      i0.ɵɵtext(69, \"Modal title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(70, \"button\", 34);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(71, \"div\", 35);\n      i0.ɵɵtemplate(72, RegisterComponent_p_72_Template, 2, 1, \"p\", 36);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(73, \"div\", 37)(74, \"button\", 38);\n      i0.ɵɵtext(75, \"Close\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(76, \"button\", 39);\n      i0.ɵɵtext(77, \"Understood\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.singnUpForm);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(17, _c0, ctx.nameValidation));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.nameValidation);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(19, _c0, ctx.lastNameValidation));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.lastNameValidation);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(21, _c0, ctx.companyValidation));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.companyValidation);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(23, _c0, ctx.usernameValidation));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.usernameValidation);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(25, _c0, ctx.mailValidation));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.mailValidation);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(27, _c0, ctx.passwordValidation));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.passwordValidation);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(29, _c0, ctx.confPasswordValidation));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.confPasswordValidation);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.singnUpForm.invalid);\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngIf\", ctx.info);\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgIf, i4.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","RegisterComponent","constructor","fb","_conectionsService","ngOnInit","singnUpForm","initForm","nameValidation","get","invalid","touched","lastNameValidation","companyValidation","mailValidation","usernameValidation","passwordValidation","confPasswordValidation","onSubmit","console","log","passInvalid","Object","values","controls","forEach","control","markAllAsTouched","singnUp","value","subscribe","next","response","info","reset","error","passOne","passTow","group","firstName","required","pattern","lastName","company","email","username","password","confPassword","samePasswords","formGroup","passOneControl","passTowControl","setErrors","noEsIgual","checkMail","mail","findMail","message","status","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/ing_desarrollo/Escritorio/Maria-login/log-maria/src/app/components/register/register.component.ts","/home/ing_desarrollo/Escritorio/Maria-login/log-maria/src/app/components/register/register.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ConectionsService } from 'src/app/service/conections.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit{\n  singnUpForm!: FormGroup<any>;\n  public info!:any;\n  \n  constructor(\n    private readonly fb: FormBuilder,\n    private _conectionsService: ConectionsService,\n  ){ }\n\n  ngOnInit():void {\n    this.singnUpForm = this.initForm();\n  }\n\n  get nameValidation(){\n    return this.singnUpForm.get('firstName')?.invalid && this.singnUpForm.get('firstName')?.touched;\n  }\n\n  get lastNameValidation(){\n    return this.singnUpForm.get('lastName')?.invalid && this.singnUpForm.get('lastName')?.touched;\n  }\n\n  get companyValidation(){\n    return this.singnUpForm.get('company')?.invalid && this.singnUpForm.get('company')?.touched;\n  }\n\n  get mailValidation(){\n    return this.singnUpForm.get('email')?.invalid && this.singnUpForm.get('email')?.touched;\n  }\n\n  get usernameValidation(){\n    return this.singnUpForm.get('username')?.invalid && this.singnUpForm.get('username')?.touched;\n  }\n\n  get passwordValidation(){\n    return this.singnUpForm.get('password')?.invalid && this.singnUpForm.get('password')?.touched;\n  }\n\n  get confPasswordValidation(){\n    return this.singnUpForm.get('confPassword')?.invalid && this.singnUpForm.get('confPassword')?.touched;\n  }\n\n  onSubmit():void{\n    console.log(\"form => Enviado\", this.singnUpForm);\n\n    this.passInvalid();\n\n    if(this.singnUpForm.invalid){\n      return Object.values(this.singnUpForm.controls).forEach(control=>{\n        control.markAllAsTouched()\n      })\n    }\n\n    this._conectionsService.singnUp(this.singnUpForm.value).subscribe({\n      next: ((response)=>{\n        this.info = response;\n        this.singnUpForm.reset();\n      }),\n      error: ((error)=>{\n        console.log('error linea 69 registro', error);\n      })\n    })\n  }\n\n  passInvalid(){\n    const passOne = this.singnUpForm.get('password')?.value;\n    const passTow = this.singnUpForm.get('confPassword')?.value;\n\n    if(passOne != passTow){\n      return true;\n    }else{\n      return false;\n    }\n  }\n\n  initForm():FormGroup {\n    return this.fb.group(\n      {\n        firstName: ['', [Validators.required, Validators.pattern(/^[a-zA-ZÁ-ÿ\\s]{4,40}$/)]],\n        lastName: ['', [Validators.required, Validators.pattern(/^[a-zA-ZÁ-ÿ\\s]{4,40}$/)]],\n        company: ['', [Validators.required, Validators.pattern(/^[a-zA-ZÁ-ÿ0-9\\.\\ ]{2,15}$/)]],\n        email: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/)]],\n        username: ['',[Validators.required, Validators.pattern(/^[a-zA-Z0-9\\_\\-]{4,15}$/)]],\n        password: ['',[Validators.required, Validators.pattern(/^[a-zA-Z0-9\\_\\-\\#\\.\\*\\@]{4,15}$/)]],\n        confPassword: ['', [Validators.required]]\n      },\n      {\n        Validators: this.samePasswords('password', 'confPassword')\n      }      \n    )\n  };\n\n  samePasswords(passOne: string, passTow: string){\n    return (formGroup:FormGroup)=>{\n      const passOneControl = formGroup.get(passOne);\n      const passTowControl = formGroup.get(passTow);\n\n      if(passOneControl?.value === passTowControl?.value){\n        passTowControl?.setErrors(null);\n      }else{\n        passTowControl?.setErrors({noEsIgual:true});\n      }\n    }\n  };\n\n  checkMail(mail:string){\n    this._conectionsService.findMail(mail).subscribe({\n      next: ((response)=>{\n        console.log(response.message);\n        return response.status\n      }),\n      error: ((error)=>{\n        console.log('linea 126 Todo bien')\n      })\n    })\n  };\n}","<div id=\"record\" class=\"d-flex justify-content-center align-items-center\">\n    <div class=\"col-8 mx-auto rounded pt-3 pb-3\" id=\"sign-up\">\n        <form id=\"register\" [formGroup]=\"singnUpForm\" (ngSubmit)=\"onSubmit()\">\n            <h2 class=\"text-center mb-3\">SINGN UP</h2>\n            <ul class=\"d-flex flex-row px-0\">\n                <div class=\"px-0 container-fluid text-center mx-auto\">\n                    <li class=\"list-group-item input\">\n                        <label for=\"name\" class=\"text-center\">Name</label>\n                        <input class=\"rounded-bottom\" type=\"text\" placeholder=\"Name\" name=\"name\" id=\"name\" formControlName=\"firstName\">\n                        <i [ngClass]=\"{'bi bi-x-circle-fill red':nameValidation}\"></i>\n                        <br>\n                        <small *ngIf=\"nameValidation\" class=\"text-warning\">Do not use special characters (#, $, *, etc.) or type more than 4 and less than 40 characters</small>\n                    </li>\n                    <li class=\"list-group-item input\">\n                        <label for=\"lastName\" class=\"text-center\">Last Name</label>\n                        <input class=\"rounded-bottom\" type=\"text\" placeholder=\"Last Name\" name=\"lastName\" id=\"lastName\" formControlName=\"lastName\">\n                        <i [ngClass]=\"{'bi bi-x-circle-fill red':lastNameValidation}\"></i>\n                        <br>\n                        <small *ngIf=\"lastNameValidation\" class=\"text-warning\">Do not use special characters (#, $, *, etc.) or type more than 4 and less than 40 characters</small>\n                    </li>\n                    <li class=\"list-group-item input\">\n                        <label for=\"company\" class=\"text-center\">Company</label>\n                        <input class=\"rounded-bottom\" type=\"text\" placeholder=\"Company\" name=\"company\" id=\"company\" formControlName=\"company\">\n                        <i [ngClass]=\"{'bi bi-x-circle-fill red':companyValidation}\"></i>\n                        <br>\n                        <small *ngIf=\"companyValidation\" class=\"text-warning\">Please do not use special characters (#, $, *, etc.) or type more than 2 characters</small>\n                    </li>\n                    <li class=\"list-group-item input\">\n                        <label for=\"username\" class=\"text-center\">Username</label>\n                        <input class=\"rounded-bottom\" type=\"text\" placeholder=\"Username\" name=\"user_name\" id=\"username\" formControlName=\"username\">\n                        <i [ngClass]=\"{'bi bi-x-circle-fill red':usernameValidation}\"></i>\n                        <br>\n                        <small *ngIf=\"usernameValidation\" class=\"text-warning\">Username is invalid, please do not use special characters (#, $, *, etc.) or type more than 4 and less than 15 characters</small>\n                    </li>\n                </div>\n                <div class=\"px-0 container-fluid text-center mx-auto\">\n                    <li class=\"list-group-item input\">\n                        <label for=\"mail\" class=\"text-center\">E-Mail</label>\n                        <input class=\"rounded-bottom\" type=\"text\" placeholder=\"E-mail\" name=\"mail\" id=\"mail\" formControlName=\"email\">\n                        <i [ngClass]=\"{'bi bi-x-circle-fill red':mailValidation}\"></i>\n                        <br>\n                        <small *ngIf=\"mailValidation\" class=\"text-warning\">Verify your e-mail</small>\n                    </li>\n                    <li class=\"list-group-item input\">\n                        <label for=\"user_password\" class=\"text-center \">Password</label>\n                        <input class=\"rounded-bottom\" type=\"password\" placeholder=\"Password\" name=\"user_password\" id=\"password\" formControlName=\"password\">\n                        <i [ngClass]=\"{'bi bi-x-circle-fill red':passwordValidation}\"></i>\n                        <br>\n                        <small *ngIf=\"passwordValidation\" class=\"text-warning\">The password is invalid, try a password greater than 4 and less than 15 characters</small>\n                    </li>\n                    <li class=\"list-group-item input\">\n                        <label for=\"confPass\" class=\"text-center\">Confirm your Password</label>\n                        <input class=\"rounded-bottom\" type=\"password\" placeholder=\"Confirm your Password\" name=\"confPassword\" id=\"confPassword\" formControlName=\"confPassword\">\n                        <i class=\"\" [ngClass]=\"{'bi bi-x-circle-fill red':confPasswordValidation}\"></i>\n                        <br>\n                        <small *ngIf=\"confPasswordValidation\" class=\"text-warning\">The passwords don't match</small>\n                    </li>\n                    <li class=\"list-group-item\">\n                        <input class=\"mx-auto d-block\" type=\"submit\" value=\"SEND\" name=\"send\" [disabled]=\"singnUpForm.invalid\" data-bs-toggle=\"modal\" data-bs-target=\"#staticBackdrop\">\n                    </li>\n                </div>  \n            </ul>\n            <div class=\"redirect\">\n                <p class=\"text-center\">If you already have an account, <strong role=\"button\" class=\"text-decoration-underline\" routerLink=\"/login\">log in here</strong></p>\n            </div>\n        </form>\n    </div>\n    <!-- Modal -->\n    <div class=\"modal fade\" id=\"staticBackdrop\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h1 class=\"modal-title fs-5\" id=\"staticBackdropLabel\">Modal title</h1>\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n          </div>\n          <div class=\"modal-body\">\n            <p *ngIf=\"this.info\">{{this.info.message}}</p>\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n            <button type=\"button\" class=\"btn btn-primary\" routerLink=\"/home\" data-bs-dismiss=\"modal\">Understood</button>\n          </div>\n        </div>\n      </div>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}