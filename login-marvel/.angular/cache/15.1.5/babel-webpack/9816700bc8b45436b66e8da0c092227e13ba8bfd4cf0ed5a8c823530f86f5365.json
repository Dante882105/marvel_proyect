{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet RegisterComponent = class RegisterComponent {\n  constructor(fb) {\n    this.fb = fb;\n  }\n  ngOnInit() {\n    this.singnUpForm = this.initForm();\n  }\n  get nameValidation() {\n    return this.singnUpForm.get('name')?.invalid && this.singnUpForm.get('name')?.touched;\n  }\n  get lastNameValidation() {\n    return this.singnUpForm.get('lastName')?.invalid && this.singnUpForm.get('lastName')?.touched;\n  }\n  get companyValidation() {\n    return this.singnUpForm.get('company')?.invalid && this.singnUpForm.get('company')?.touched;\n  }\n  get mailValidation() {\n    return this.singnUpForm.get('mail')?.invalid && this.singnUpForm.get('mail')?.touched;\n  }\n  get usernameValidation() {\n    return this.singnUpForm.get('username')?.invalid && this.singnUpForm.get('username')?.touched;\n  }\n  get passwordValidation() {\n    return this.singnUpForm.get('password')?.invalid && this.singnUpForm.get('password')?.touched;\n  }\n  onSubmit() {\n    console.log(\"form => Enviado\", this.singnUpForm);\n  }\n  initForm() {\n    return this.fb.group({\n      name: ['', [Validators.required, Validators.pattern(/^[a-zA-ZÁ-ÿ\\s]{4,40}$/)]],\n      lastName: ['', Validators.required, Validators.pattern(/^[a-zA-ZÁ-ÿ\\s]{4,40}$/)],\n      company: ['', [Validators.required, Validators.pattern(/^[a-zA-ZÁ-ÿ0-9\\.\\ ]{2,15}$/)]],\n      mail: [Validators.required, Validators.pattern(/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/)],\n      username: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9\\_\\-]{4,15}$/)]],\n      password: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9\\_\\-\\#\\.\\*\\@]{4,15}$/)]],\n      confPassword: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9\\_\\-\\#\\.\\*\\@]{4,15}$/)]]\n    });\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})], RegisterComponent);\nexport { RegisterComponent };","map":{"version":3,"mappings":"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","names":["Component","Validators","RegisterComponent","constructor","fb","ngOnInit","singnUpForm","initForm","nameValidation","get","invalid","touched","lastNameValidation","companyValidation","mailValidation","usernameValidation","passwordValidation","onSubmit","console","log","group","name","required","pattern","lastName","company","mail","username","password","confPassword","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/ing_desarrollo/Escritorio/Maria-login/log-maria/src/app/components/register/register.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit{\n  singnUpForm!: FormGroup<any>;\n  \n  constructor(\n    private readonly fb: FormBuilder\n  ){ }\n\n  ngOnInit():void {\n    this.singnUpForm = this.initForm();\n  }\n\n  get nameValidation(){\n    return this.singnUpForm.get('name')?.invalid && this.singnUpForm.get('name')?.touched;\n  }\n\n  get lastNameValidation(){\n    return this.singnUpForm.get('lastName')?.invalid && this.singnUpForm.get('lastName')?.touched;\n  }\n\n  get companyValidation(){\n    return this.singnUpForm.get('company')?.invalid && this.singnUpForm.get('company')?.touched;\n  }\n\n  get mailValidation(){\n    return this.singnUpForm.get('mail')?.invalid && this.singnUpForm.get('mail')?.touched;\n  }\n\n  get usernameValidation(){\n    return this.singnUpForm.get('username')?.invalid && this.singnUpForm.get('username')?.touched;\n  }\n\n  get passwordValidation(){\n    return this.singnUpForm.get('password')?.invalid && this.singnUpForm.get('password')?.touched;\n  }\n\n  onSubmit():void{\n    console.log(\"form => Enviado\", this.singnUpForm)\n  }\n\n  initForm():any {\n    return this.fb.group(\n      {\n        name: ['', [Validators.required, Validators.pattern(/^[a-zA-ZÁ-ÿ\\s]{4,40}$/)]],\n        lastName: ['', Validators.required, Validators.pattern(/^[a-zA-ZÁ-ÿ\\s]{4,40}$/)],\n        company: ['', [Validators.required, Validators.pattern(/^[a-zA-ZÁ-ÿ0-9\\.\\ ]{2,15}$/)]],\n        mail: [Validators.required, Validators.pattern(/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/)],\n        username: ['',[Validators.required, Validators.pattern(/^[a-zA-Z0-9\\_\\-]{4,15}$/)]],\n        password: ['',[Validators.required, Validators.pattern(/^[a-zA-Z0-9\\_\\-\\#\\.\\*\\@]{4,15}$/)]],\n        confPassword: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9\\_\\-\\#\\.\\*\\@]{4,15}$/)]]\n      }\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}