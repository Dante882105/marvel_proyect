{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet RegisterComponent = class RegisterComponent {\n  constructor(fb, _conectionsService, alterEgoValidator) {\n    this.fb = fb;\n    this._conectionsService = _conectionsService;\n    this.alterEgoValidator = alterEgoValidator;\n    this.mailInfo = {\n      message: \"Verify your email\"\n    };\n  }\n  ngOnInit() {\n    this.singnUpForm = this.initForm();\n  }\n  get nameValidation() {\n    return this.singnUpForm.get('firstName')?.invalid && this.singnUpForm.get('firstName')?.touched;\n  }\n  get lastNameValidation() {\n    return this.singnUpForm.get('lastName')?.invalid && this.singnUpForm.get('lastName')?.touched;\n  }\n  get companyValidation() {\n    return this.singnUpForm.get('company')?.invalid && this.singnUpForm.get('company')?.touched;\n  }\n  get mailValidation() {\n    return this.singnUpForm.get('email')?.invalid && this.singnUpForm.get('email')?.touched;\n  }\n  get usernameValidation() {\n    return this.singnUpForm.get('username')?.invalid && this.singnUpForm.get('username')?.touched;\n  }\n  get passwordValidation() {\n    return this.singnUpForm.get('password')?.invalid && this.singnUpForm.get('password')?.touched;\n  }\n  get confPasswordValidation() {\n    return this.singnUpForm.get('confPassword')?.invalid && this.singnUpForm.get('confPassword')?.touched;\n  }\n  /*passInvalid(){\n    const passOne = this.singnUpForm.get('password');\n    const passTow = this.singnUpForm.get('confPassword');\n       if(passOne?.value != passTow?.value){\n      return true;\n    }else{\n      return false;\n    }\n  };*/\n  initForm() {\n    return this.fb.group({\n      firstName: ['', [Validators.required, Validators.pattern(/^[a-zA-ZÁ-ÿ\\s]{4,40}$/)]],\n      lastName: ['', [Validators.required, Validators.pattern(/^[a-zA-ZÁ-ÿ\\s]{4,40}$/)]],\n      company: ['', [Validators.required, Validators.pattern(/^[a-zA-ZÁ-ÿ0-9\\.\\ ]{2,15}$/)]],\n      email: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/)], {\n        AsyncValidators: [this.alterEgoValidator.validate.bind(this.checkMail())]\n      }],\n      username: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9\\_\\-]{4,15}$/)]],\n      password: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9\\_\\-\\#\\.\\*\\@]{4,15}$/)]],\n      confPassword: ['', [Validators.required], {\n        validators: this.samePasswords('password', 'confPassword')\n      }]\n    }, {\n      //validators: [this.samePasswords('password', 'confPassword'), this.checkMail()],\n      updateOn: 'blur'\n    });\n  }\n  samePasswords(passOne, passTow) {\n    return formGroup => {\n      const passOneControl = formGroup.get(passOne);\n      const passTowControl = formGroup.get(passTow);\n      console.log(\"Linea 89 prueba de ingreso a método\", passOneControl?.value, passTowControl?.value);\n      if (passOneControl?.value === passTowControl?.value) {\n        passTowControl?.setErrors(null);\n      } else {\n        passTowControl?.setErrors({\n          noEsIgual: true\n        });\n      }\n    };\n  }\n  checkMail() {\n    return formGroup => {\n      let mail = formGroup.get('email');\n      console.log(mail);\n      return this._conectionsService.findMail(mail?.value).subscribe({\n        next: response => {\n          mail?.setErrors({\n            unicMail: true\n          });\n          return this.mailInfo = response;\n        },\n        error: error => {\n          mail?.setErrors(null);\n          return error;\n        }\n      });\n    };\n  }\n  onSubmit() {\n    console.log(\"form => Enviado\", this.singnUpForm);\n    if (this.singnUpForm.invalid) {\n      return Object.values(this.singnUpForm.controls).forEach(control => {\n        control.markAllAsTouched();\n      });\n    }\n    this._conectionsService.singnUp(this.singnUpForm.value).subscribe({\n      next: response => {\n        this.info = response;\n        this.singnUpForm.reset();\n      },\n      error: error => {\n        console.log('error linea 69 registro', error);\n      }\n    });\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})], RegisterComponent);\nexport { RegisterComponent };","map":{"version":3,"mappings":"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","names":["Component","Validators","RegisterComponent","constructor","fb","_conectionsService","alterEgoValidator","mailInfo","message","ngOnInit","singnUpForm","initForm","nameValidation","get","invalid","touched","lastNameValidation","companyValidation","mailValidation","usernameValidation","passwordValidation","confPasswordValidation","group","firstName","required","pattern","lastName","company","email","AsyncValidators","validate","bind","checkMail","username","password","confPassword","validators","samePasswords","updateOn","passOne","passTow","formGroup","passOneControl","passTowControl","console","log","value","setErrors","noEsIgual","mail","findMail","subscribe","next","response","unicMail","error","onSubmit","Object","values","controls","forEach","control","markAllAsTouched","singnUp","info","reset","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/ing_desarrollo/Escritorio/Maria-login/log-maria/src/app/components/register/register.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, Validators, AsyncValidatorFn, FormControl, ValidatorFn, ValidationErrors } from '@angular/forms';\nimport { ConectionsService } from 'src/app/service/conections.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit{\n  singnUpForm!: FormGroup<any>;\n  public info!:any;\n  public mailInfo!:any;\n  \n  constructor(\n    private readonly fb: FormBuilder,\n    private _conectionsService: ConectionsService,\n    private alterEgoValidator: UniqueAlterEgoValidator\n  ){ \n    this.mailInfo = {message: \"Verify your email\"};\n  }\n\n  ngOnInit():void {\n    this.singnUpForm = this.initForm();\n  }\n\n  get nameValidation(){\n    return this.singnUpForm.get('firstName')?.invalid && this.singnUpForm.get('firstName')?.touched;\n  }\n\n  get lastNameValidation(){\n    return this.singnUpForm.get('lastName')?.invalid && this.singnUpForm.get('lastName')?.touched;\n  }\n\n  get companyValidation(){\n    return this.singnUpForm.get('company')?.invalid && this.singnUpForm.get('company')?.touched;\n  }\n\n  get mailValidation(){\n    return this.singnUpForm.get('email')?.invalid && this.singnUpForm.get('email')?.touched;\n  }\n\n  get usernameValidation(){\n    return this.singnUpForm.get('username')?.invalid && this.singnUpForm.get('username')?.touched;\n  }\n\n  get passwordValidation(){\n    return this.singnUpForm.get('password')?.invalid && this.singnUpForm.get('password')?.touched;\n  }\n\n  get confPasswordValidation(){\n    return this.singnUpForm.get('confPassword')?.invalid && this.singnUpForm.get('confPassword')?.touched;\n  }\n\n\n\n  /*passInvalid(){\n    const passOne = this.singnUpForm.get('password');\n    const passTow = this.singnUpForm.get('confPassword');\n\n    if(passOne?.value != passTow?.value){\n      return true;\n    }else{\n      return false;\n    }\n  };*/\n\n  initForm():FormGroup {\n    return this.fb.group(\n      {\n        firstName: ['', [Validators.required, Validators.pattern(/^[a-zA-ZÁ-ÿ\\s]{4,40}$/)]],\n        lastName: ['', [Validators.required, Validators.pattern(/^[a-zA-ZÁ-ÿ\\s]{4,40}$/)]],\n        company: ['', [Validators.required, Validators.pattern(/^[a-zA-ZÁ-ÿ0-9\\.\\ ]{2,15}$/)]],\n        email: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/)], {AsyncValidators: [this.alterEgoValidator.validate.bind(this.checkMail())]}],\n        username: ['',[Validators.required, Validators.pattern(/^[a-zA-Z0-9\\_\\-]{4,15}$/)]],\n        password: ['',[Validators.required, Validators.pattern(/^[a-zA-Z0-9\\_\\-\\#\\.\\*\\@]{4,15}$/)]],\n        confPassword: ['', [Validators.required], {validators: this.samePasswords('password', 'confPassword')}]\n      },\n      {\n        //validators: [this.samePasswords('password', 'confPassword'), this.checkMail()],\n        updateOn: 'blur'\n      }\n    )\n  };\n\n\n  samePasswords(passOne: string, passTow: string):ValidatorFn{\n    return (formGroup:AbstractControl): any =>{\n      const passOneControl = formGroup.get(passOne);\n      const passTowControl = formGroup.get(passTow);\n      console.log(\"Linea 89 prueba de ingreso a método\", passOneControl?.value, passTowControl?.value)\n      if(passOneControl?.value === passTowControl?.value){\n        passTowControl?.setErrors(null);\n      }else{\n        passTowControl?.setErrors({noEsIgual:true});\n      }\n    }\n  };\n\n  checkMail(): ValidatorFn{\n    return ((formGroup:AbstractControl):ValidationErrors | null =>{\n      let mail = formGroup.get('email');\n      console.log(mail);\n      return this._conectionsService.findMail(mail?.value).subscribe({\n        next: ((response)=>{\n          mail?.setErrors({unicMail:true});\n          return this.mailInfo = response;\n        }),\n        error: ((error)=>{\n          mail?.setErrors(null);\n          return error\n        })\n      })\n    })\n  };\n\n  onSubmit():void{\n    console.log(\"form => Enviado\", this.singnUpForm);\n\n    if(this.singnUpForm.invalid){\n      return Object.values(this.singnUpForm.controls).forEach(control=>{\n        control.markAllAsTouched()\n      })\n    }\n\n    this._conectionsService.singnUp(this.singnUpForm.value).subscribe({\n      next: ((response)=>{\n        this.info = response;\n        this.singnUpForm.reset();\n      }),\n      error: ((error)=>{\n        console.log('error linea 69 registro', error);\n      })\n    })\n  };\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}