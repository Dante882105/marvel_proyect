{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/service/conections.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nfunction ContactusComponent_small_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 34);\n    i0.ɵɵtext(1, \"Do not use special characters (#, $, *, etc.) or type more than 4 and less than 40 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ContactusComponent_small_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 35);\n    i0.ɵɵtext(1, \"Please do not use special characters (#, $, *, etc.) or type more than 2 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ContactusComponent_small_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 35);\n    i0.ɵɵtext(1, \"Please do not use special characters (#, $, *, etc.) or type more than 3 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ContactusComponent_small_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 35);\n    i0.ɵɵtext(1, \"Verify your e-mail\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ContactusComponent_small_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 35);\n    i0.ɵɵtext(1, \"Please do not use special characters (#, $, *, etc.)\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ContactusComponent_p_50_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r5.info.message);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"bi bi-x-circle-fill red\": a0\n  };\n};\nexport class ContactusComponent {\n  constructor(fb, _conectionsService) {\n    this.fb = fb;\n    this._conectionsService = _conectionsService;\n  }\n  ngOnInit() {\n    this.contactUsForm = this.initForm();\n  }\n  onSubmit() {\n    console.log(\"Hola Mundo\");\n    this._conectionsService.contactUs(this.contactUsForm.value).subscribe({\n      next: response => {\n        this.info = response;\n        this.contactUsForm.reset();\n      },\n      error: error => {\n        console.log('error linea 30 contactus', error);\n      }\n    });\n  }\n  get nameValidation() {\n    return this.contactUsForm.get('name')?.invalid && this.contactUsForm.get('name')?.touched;\n  }\n  get companyValidation() {\n    return this.contactUsForm.get('company')?.invalid && this.contactUsForm.get('company')?.touched;\n  }\n  get countryValidation() {\n    return this.contactUsForm.get('country')?.invalid && this.contactUsForm.get('country')?.touched;\n  }\n  get mailValidation() {\n    return this.contactUsForm.get('mail')?.invalid && this.contactUsForm.get('mail')?.touched;\n  }\n  get messageValidation() {\n    return this.contactUsForm.get('message')?.invalid && this.contactUsForm.get('message')?.touched;\n  }\n  initForm() {\n    return this.fb.group({\n      name: ['', [Validators.required, Validators.pattern(/^[a-zA-ZÁ-ÿ\\s]{4,40}$/)]],\n      company: ['', [Validators.pattern(/^[a-zA-ZÁ-ÿ\\s]{4,40}$/)]],\n      country: ['', [Validators.required, Validators.pattern(/^[a-zA-ZÁ-ÿ\\.\\ ]{2,15}$/)]],\n      mail: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/)]],\n      message: ['', [Validators.pattern(/^[a-zA-ZÁ-ÿ0-9\\.\\¿\\?\\,\\¡\\!\\'\\ ]{1,150}$/)]]\n    });\n  }\n}\nContactusComponent.ɵfac = function ContactusComponent_Factory(t) {\n  return new (t || ContactusComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ConectionsService));\n};\nContactusComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ContactusComponent,\n  selectors: [[\"app-contactus\"]],\n  decls: 56,\n  vars: 23,\n  consts: [[\"id\", \"contact\", 1, \"d-flex\", \"justify-content-center\", \"align-items-center\"], [\"id\", \"contactUs\", 1, \"col-4\", \"rounded\", \"pt-3\", \"pb-3\"], [\"action\", \"\", 3, \"formGroup\", \"ngSubmit\"], [1, \"text-center\"], [1, \"px-0\", \"text-center\"], [1, \"list-group-item\", \"input\"], [\"for\", \"name\", 1, \"text-center\"], [\"type\", \"text\", \"placeholder\", \"Name\", \"name\", \"name\", \"id\", \"name\", \"formControlName\", \"name\", 1, \"rounded-bottom\", \"mx-auto\", \"d-block\"], [3, \"ngClass\"], [\"class\", \"text-warning col-10\", 4, \"ngIf\"], [\"for\", \"company\", 1, \"text-center\"], [\"type\", \"text\", \"placeholder\", \"Company\", \"name\", \"company\", \"id\", \"company\", \"formControlName\", \"company\", 1, \"rounded-bottom\", \"mx-auto\", \"d-block\"], [\"class\", \"text-warning\", 4, \"ngIf\"], [\"for\", \"country\", 1, \"text-center\"], [\"type\", \"text\", \"placeholder\", \"country\", \"name\", \"country\", \"id\", \"country\", \"formControlName\", \"country\", 1, \"rounded-bottom\", \"mx-auto\", \"d-block\"], [\"for\", \"email\", 1, \"text-center\"], [\"type\", \"email\", \"placeholder\", \"E-mail\", \"name\", \"mail\", \"id\", \"mail\", \"formControlName\", \"mail\", 1, \"rounded-bottom\", \"mx-auto\", \"d-block\"], [1, \"list-group-item\"], [\"for\", \"message\", 1, \"text-center\"], [\"name\", \"message\", \"cols\", \"30\", \"rows\", \"10\", \"placeholder\", \"Message\", \"id\", \"message\", \"formControlName\", \"message\", 1, \"mx-auto\", \"d-block\", \"rounded-bottom\"], [1, \"input\", \"list-group-item\", \"d-flex\", \"align-items-center\"], [\"type\", \"submit\", \"value\", \"Send\", \"name\", \"send\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#staticBackdrop\", 1, \"mx-auto\", \"d-block\", 3, \"disabled\"], [1, \"redirect\"], [\"role\", \"button\", \"routerLink\", \"/login\", 1, \"text-decoration-underline\"], [\"id\", \"staticBackdrop\", \"data-bs-backdrop\", \"static\", \"data-bs-keyboard\", \"false\", \"tabindex\", \"-1\", \"aria-labelledby\", \"staticBackdropLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [\"id\", \"modal\", 1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"staticBackdropLabel\", 1, \"modal-title\", \"fs-5\"], [1, \"modal-body\", \"text-center\"], [4, \"ngIf\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"bg-secondary\", \"text-white\"], [\"id\", \"btn\", \"type\", \"button\", \"routerLink\", \"/login\", \"data-bs-dismiss\", \"modal\", 1, \"btn\"], [1, \"text-warning\", \"col-10\"], [1, \"text-warning\"]],\n  template: function ContactusComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function ContactusComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"h2\", 3);\n      i0.ɵɵtext(4, \"CONTACT US\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"ul\", 4)(6, \"li\", 5)(7, \"label\", 6);\n      i0.ɵɵtext(8, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 7)(10, \"i\", 8);\n      i0.ɵɵtemplate(11, ContactusComponent_small_11_Template, 2, 0, \"small\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"li\", 5)(13, \"label\", 10);\n      i0.ɵɵtext(14, \"Company\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 11)(16, \"i\", 8);\n      i0.ɵɵtemplate(17, ContactusComponent_small_17_Template, 2, 0, \"small\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"li\", 5)(19, \"label\", 13);\n      i0.ɵɵtext(20, \"Country\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"input\", 14)(22, \"i\", 8);\n      i0.ɵɵtemplate(23, ContactusComponent_small_23_Template, 2, 0, \"small\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"li\", 5)(25, \"label\", 15);\n      i0.ɵɵtext(26, \"E-mail\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(27, \"input\", 16)(28, \"i\", 8);\n      i0.ɵɵtemplate(29, ContactusComponent_small_29_Template, 2, 0, \"small\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"li\", 17)(31, \"label\", 18);\n      i0.ɵɵtext(32, \"Message\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(33, \"textarea\", 19)(34, \"i\", 8);\n      i0.ɵɵtemplate(35, ContactusComponent_small_35_Template, 2, 0, \"small\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"li\", 20);\n      i0.ɵɵelement(37, \"input\", 21);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(38, \"div\", 22)(39, \"p\", 3);\n      i0.ɵɵtext(40, \"If you already have an account, \");\n      i0.ɵɵelementStart(41, \"strong\", 23);\n      i0.ɵɵtext(42, \"log in here\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(43, \"div\", 24)(44, \"div\", 25)(45, \"div\", 26)(46, \"div\", 27)(47, \"h1\", 28);\n      i0.ɵɵtext(48, \"For Your Information\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(49, \"div\", 29);\n      i0.ɵɵtemplate(50, ContactusComponent_p_50_Template, 2, 1, \"p\", 30);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(51, \"div\", 31)(52, \"button\", 32);\n      i0.ɵɵtext(53, \"Close\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(54, \"button\", 33);\n      i0.ɵɵtext(55, \"Understood\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.contactUsForm);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(13, _c0, ctx.nameValidation));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.nameValidation);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(15, _c0, ctx.companyValidation));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.companyValidation);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(17, _c0, ctx.countryValidation));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.countryValidation);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(19, _c0, ctx.mailValidation));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.mailValidation);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(21, _c0, ctx.messageValidation));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.messageValidation);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.contactUsForm.invalid);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngIf\", ctx.info);\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgIf, i4.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","ContactusComponent","constructor","fb","_conectionsService","ngOnInit","contactUsForm","initForm","onSubmit","console","log","contactUs","value","subscribe","next","response","info","reset","error","nameValidation","get","invalid","touched","companyValidation","countryValidation","mailValidation","messageValidation","group","name","required","pattern","company","country","mail","message","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/ing_desarrollo/Escritorio/Maria-login/login-maria/log-maria/src/app/components/contactus/contactus.component.ts","/home/ing_desarrollo/Escritorio/Maria-login/login-maria/log-maria/src/app/components/contactus/contactus.component.html"],"sourcesContent":["import { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { ConectionsService } from 'src/app/service/conections.service';\n\n@Component({\n  selector: 'app-contactus',\n  templateUrl: './contactus.component.html',\n  styleUrls: ['./contactus.component.css']\n})\nexport class ContactusComponent implements OnInit{\n  contactUsForm!: FormGroup<any>;\n  public info!:any;\n\n  constructor(\n    private readonly fb:FormBuilder,\n    private _conectionsService: ConectionsService\n  ){}\n\n  ngOnInit(): void {\n      this.contactUsForm = this.initForm();\n  };\n\n  onSubmit(){\n    console.log(\"Hola Mundo\");\n    this._conectionsService.contactUs(this.contactUsForm.value).subscribe({\n      next: ((response)=>{\n        this.info = response;\n        this.contactUsForm.reset();\n      }),\n      error: ((error)=>{\n        console.log('error linea 30 contactus', error)\n      })\n    })\n  }\n\n  get nameValidation(){\n    return this.contactUsForm.get('name')?.invalid && this.contactUsForm.get('name')?.touched;\n  };\n\n  get companyValidation(){\n    return this.contactUsForm.get('company')?.invalid && this.contactUsForm.get('company')?.touched;\n  };\n\n  get countryValidation(){\n    return this.contactUsForm.get('country')?.invalid && this.contactUsForm.get('country')?.touched;\n  };\n  \n  get mailValidation(){\n    return this.contactUsForm.get('mail')?.invalid && this.contactUsForm.get('mail')?.touched;\n  };\n\n  get messageValidation(){\n    return this.contactUsForm.get('message')?.invalid && this.contactUsForm.get('message')?.touched\n  };\n\n  initForm():FormGroup{\n    return this.fb.group(\n      {\n        name: ['', [Validators.required, Validators.pattern(/^[a-zA-ZÁ-ÿ\\s]{4,40}$/)]],\n        company: ['', [Validators.pattern(/^[a-zA-ZÁ-ÿ\\s]{4,40}$/)]],\n        country: ['', [Validators.required, Validators.pattern(/^[a-zA-ZÁ-ÿ\\.\\ ]{2,15}$/)]],\n        mail: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/)]],\n        message: ['', [Validators.pattern(/^[a-zA-ZÁ-ÿ0-9\\.\\¿\\?\\,\\¡\\!\\'\\ ]{1,150}$/)]]\n      }\n    )\n  };\n}\n","<div id=\"contact\" class=\"d-flex justify-content-center align-items-center\">\n    <div id=\"contactUs\" class=\"col-4 rounded pt-3 pb-3\">\n        <form action=\"\" [formGroup]=\"contactUsForm\" (ngSubmit)=\"onSubmit()\">\n            <h2 class=\"text-center\">CONTACT US</h2>\n            <ul class=\"px-0 text-center\">\n                <li class=\"list-group-item input\">\n                    <label class=\"text-center\" for=\"name\">Name</label>\n                    <input class =\"rounded-bottom mx-auto d-block\" type=\"text\" placeholder=\"Name\" name=\"name\" id=\"name\" formControlName=\"name\">\n                    <i [ngClass]=\"{'bi bi-x-circle-fill red': nameValidation}\"></i>\n                    <small *ngIf=\"nameValidation\" class=\"text-warning col-10\">Do not use special characters (#, $, *, etc.) or type more than 4 and less than 40 characters</small>\n                </li>\n                <li class=\"list-group-item input\">\n                    <label class=\"text-center\" for=\"company\">Company</label>\n                    <input class =\"rounded-bottom mx-auto d-block\" type=\"text\" placeholder=\"Company\" name=\"company\" id=\"company\" formControlName=\"company\">\n                    <i [ngClass]=\"{'bi bi-x-circle-fill red':companyValidation}\"></i>\n                    <small *ngIf=\"companyValidation\" class=\"text-warning\">Please do not use special characters (#, $, *, etc.) or type more than 2 characters</small>\n                </li>\n                <li class=\"list-group-item input\">\n                    <label class=\"text-center\" for=\"country\">Country</label>\n                    <input class =\"rounded-bottom mx-auto d-block\" type=\"text\" placeholder=\"country\" name=\"country\" id=\"country\" formControlName=\"country\">\n                    <i [ngClass]=\"{'bi bi-x-circle-fill red':countryValidation}\"></i>\n                    <small *ngIf=\"countryValidation\" class=\"text-warning\">Please do not use special characters (#, $, *, etc.) or type more than 3 characters</small>\n                </li>\n                <li class=\"list-group-item input\">\n                    <label class=\"text-center\" for=\"email\">E-mail</label>\n                    <input class =\"rounded-bottom mx-auto d-block\" type=\"email\" placeholder=\"E-mail\" name=\"mail\" id=\"mail\" formControlName=\"mail\">\n                    <i [ngClass]=\"{'bi bi-x-circle-fill red':mailValidation}\"></i>\n                    <small *ngIf=\"mailValidation\" class=\"text-warning\">Verify your e-mail</small>\n                </li>\n                <li class=\"list-group-item\">\n                    <label class=\"text-center\" for=\"message\">Message</label>\n                    <textarea class=\"mx-auto d-block rounded-bottom\" name=\"message\" cols=\"30\" rows=\"10\" placeholder=\"Message\" id=\"message\" formControlName=\"message\"></textarea>\n                    <i [ngClass]=\"{'bi bi-x-circle-fill red':messageValidation}\"></i>\n                    <small *ngIf=\"messageValidation\" class=\"text-warning\">Please do not use special characters (#, $, *, etc.)</small>\n                </li>\n                <li class=\"input list-group-item d-flex align-items-center\">\n                    <input type=\"submit\" value=\"Send\" name=\"send\" class=\"mx-auto d-block\" [disabled]=\"contactUsForm.invalid\" data-bs-toggle=\"modal\" data-bs-target=\"#staticBackdrop\">\n                </li>\n            </ul>\n            <div class=\"redirect\">\n                <p class=\"text-center\">If you already have an account, <strong role=\"button\" class=\"text-decoration-underline\" routerLink=\"/login\">log in here</strong></p>\n            </div>\n        </form>\n    </div>\n    <!-- Modal -->\n    <div class=\"modal fade\" id=\"staticBackdrop\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n        <div class=\"modal-dialog\">\n          <div class=\"modal-content\" id=\"modal\">\n            <div class=\"modal-header\">\n              <h1 class=\"modal-title fs-5\" id=\"staticBackdropLabel\">For Your Information</h1>\n            </div>\n            <div class=\"modal-body text-center\">\n              <p *ngIf=\"this.info\">{{this.info.message}}</p>\n            </div>\n            <div class=\"modal-footer\">\n              <button type=\"button\" class=\"btn bg-secondary text-white\" data-bs-dismiss=\"modal\">Close</button>\n              <button id=\"btn\" type=\"button\" class=\"btn\" routerLink=\"/login\" data-bs-dismiss=\"modal\">Understood</button>\n            </div>\n          </div>\n        </div>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}