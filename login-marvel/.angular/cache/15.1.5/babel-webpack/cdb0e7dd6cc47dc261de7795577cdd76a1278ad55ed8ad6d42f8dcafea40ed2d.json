{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nfunction RegisterComponent_small_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 27);\n    i0.ɵɵtext(1, \"Do not use special characters (#, $, *, etc.) or type more than 4 and less than 40 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_small_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 27);\n    i0.ɵɵtext(1, \"Do not use special characters (#, $, *, etc.) or type more than 4 and less than 40 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_small_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 27);\n    i0.ɵɵtext(1, \"Please do not use special characters (#, $, *, etc.) or type more than 2 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_small_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 27);\n    i0.ɵɵtext(1, \"Username is invalid, please do not use special characters (#, $, *, etc.) or type more than 4 and less than 15 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_small_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 27);\n    i0.ɵɵtext(1, \"Verify your e-mail\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_small_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 27);\n    i0.ɵɵtext(1, \"The password is invalid, try a password greater than 4 and less than 15 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_small_56_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 27);\n    i0.ɵɵtext(1, \"The password is invalid, try a password greater than 4 and less than 15 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0, a1) {\n  return {\n    \"bi bi-x-circle-fill red\": a0,\n    \"bi bi-check-circle-fill green\": a1\n  };\n};\nexport class RegisterComponent {\n  constructor(fb) {\n    this.fb = fb;\n  }\n  ngOnInit() {\n    this.singnUpForm = this.initForm();\n  }\n  get nameValidation() {\n    return this.singnUpForm.get('name')?.invalid && this.singnUpForm.get('name')?.touched;\n  }\n  get lastNameValidation() {\n    return this.singnUpForm.get('lastName')?.invalid && this.singnUpForm.get('lastName')?.touched;\n  }\n  get companyValidation() {\n    return this.singnUpForm.get('company')?.invalid && this.singnUpForm.get('company')?.touched;\n  }\n  get mailValidation() {\n    return this.singnUpForm.get('mail')?.invalid && this.singnUpForm.get('mail')?.touched;\n  }\n  get usernameValidation() {\n    return this.singnUpForm.get('username')?.invalid && this.singnUpForm.get('username')?.touched;\n  }\n  get passwordValidation() {\n    return this.singnUpForm.get('password')?.invalid && this.singnUpForm.get('password')?.touched;\n  }\n  get confPasswordValidation() {\n    return function () {\n      if (this.singnUpForm.get('password')?.value === this.singnUpForm.get('confpassword')?.value) {\n        console.log(\"Hola Mundo\");\n        return false;\n      }\n    };\n  }\n  onSubmit() {\n    console.log(\"form => Enviado\", this.singnUpForm);\n  }\n  initForm() {\n    return this.fb.group({\n      name: ['', [Validators.required, Validators.pattern(/^[a-zA-ZÁ-ÿ\\s]{4,40}$/)]],\n      lastName: ['', Validators.required, Validators.pattern(/^[a-zA-ZÁ-ÿ\\s]{4,40}$/)],\n      company: ['', [Validators.required, Validators.pattern(/^[a-zA-ZÁ-ÿ0-9\\.\\ ]{2,15}$/)]],\n      mail: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/)]],\n      username: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9\\_\\-]{4,15}$/)]],\n      password: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9\\_\\-\\#\\.\\*\\@]{4,15}$/)]],\n      confPassword: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9\\_\\-\\#\\.\\*\\@]{4,15}$/)]]\n    });\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 64,\n  vars: 36,\n  consts: [[\"id\", \"record\", 1, \"d-flex\", \"justify-content-center\", \"align-items-center\"], [\"id\", \"sign-up\", 1, \"col-8\", \"mx-auto\", \"rounded\", \"pt-3\", \"pb-3\"], [\"id\", \"register\", 3, \"formGroup\", \"ngSubmit\"], [1, \"text-center\"], [1, \"d-flex\", \"flex-row\", \"px-0\"], [1, \"px-0\", \"container-fluid\", \"text-center\", \"mt-4\", \"mb-4\", \"mx-auto\"], [\"id\", \"input\", 1, \"list-group-item\"], [\"for\", \"name\", 1, \"text-center\"], [\"type\", \"text\", \"placeholder\", \"Name\", \"name\", \"name\", \"id\", \"name\", \"formControlName\", \"name\", 1, \"rounded-bottom\"], [3, \"ngClass\"], [\"class\", \"text-warning\", 4, \"ngIf\"], [\"for\", \"lastName\", 1, \"text-center\"], [\"type\", \"text\", \"placeholder\", \"Last Name\", \"name\", \"lastName\", \"id\", \"lastName\", \"formControlName\", \"lastName\", 1, \"rounded-bottom\"], [\"for\", \"company\", 1, \"text-center\"], [\"type\", \"text\", \"placeholder\", \"Company\", \"name\", \"company\", \"id\", \"company\", \"formControlName\", \"company\", 1, \"rounded-bottom\"], [\"for\", \"username\", 1, \"text-center\"], [\"type\", \"text\", \"placeholder\", \"Username\", \"name\", \"user_name\", \"id\", \"username\", \"formControlName\", \"username\", 1, \"rounded-bottom\"], [\"for\", \"mail\", 1, \"text-center\"], [\"type\", \"text\", \"placeholder\", \"E-mail\", \"name\", \"mail\", \"id\", \"mail\", \"formControlName\", \"mail\", 1, \"rounded-bottom\"], [\"for\", \"user_password\", 1, \"text-center\"], [\"type\", \"password\", \"placeholder\", \"Password\", \"name\", \"user_password\", \"id\", \"password\", \"formControlName\", \"password\", 1, \"rounded-bottom\"], [\"for\", \"confPass\", 1, \"text-center\"], [\"type\", \"password\", \"placeholder\", \"Confirm your Password\", \"name\", \"confPassword\", \"id\", \"confPassword\", \"formControlName\", \"confPassword\", 1, \"rounded-bottom\"], [1, \"list-group-item\"], [\"type\", \"submit\", \"value\", \"SEND\", \"name\", \"send\", 1, \"mx-auto\", \"d-block\"], [1, \"redirect\"], [\"role\", \"button\", \"routerLink\", \"/login\", 1, \"text-decoration-underline\"], [1, \"text-warning\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"h2\", 3);\n      i0.ɵɵtext(4, \"SINGN UP\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"ul\", 4)(6, \"div\", 5)(7, \"li\", 6)(8, \"label\", 7);\n      i0.ɵɵtext(9, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 8)(11, \"i\", 9)(12, \"br\");\n      i0.ɵɵtemplate(13, RegisterComponent_small_13_Template, 2, 0, \"small\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"li\", 6)(15, \"label\", 11);\n      i0.ɵɵtext(16, \"Last Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 12)(18, \"i\", 9)(19, \"br\");\n      i0.ɵɵtemplate(20, RegisterComponent_small_20_Template, 2, 0, \"small\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"li\", 6)(22, \"label\", 13);\n      i0.ɵɵtext(23, \"Company\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(24, \"input\", 14)(25, \"i\", 9)(26, \"br\");\n      i0.ɵɵtemplate(27, RegisterComponent_small_27_Template, 2, 0, \"small\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"li\", 6)(29, \"label\", 15);\n      i0.ɵɵtext(30, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(31, \"input\", 16)(32, \"i\", 9)(33, \"br\");\n      i0.ɵɵtemplate(34, RegisterComponent_small_34_Template, 2, 0, \"small\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(35, \"div\", 5)(36, \"li\", 6)(37, \"label\", 17);\n      i0.ɵɵtext(38, \"E-Mail\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(39, \"input\", 18)(40, \"i\", 9)(41, \"br\");\n      i0.ɵɵtemplate(42, RegisterComponent_small_42_Template, 2, 0, \"small\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"li\", 6)(44, \"label\", 19);\n      i0.ɵɵtext(45, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(46, \"input\", 20)(47, \"i\", 9)(48, \"br\");\n      i0.ɵɵtemplate(49, RegisterComponent_small_49_Template, 2, 0, \"small\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(50, \"li\", 6)(51, \"label\", 21);\n      i0.ɵɵtext(52, \"Confirm your Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(53, \"input\", 22)(54, \"i\", 9)(55, \"br\");\n      i0.ɵɵtemplate(56, RegisterComponent_small_56_Template, 2, 0, \"small\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(57, \"li\", 23);\n      i0.ɵɵelement(58, \"input\", 24);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(59, \"div\", 25)(60, \"p\", 3);\n      i0.ɵɵtext(61, \"If you already have an account, \");\n      i0.ɵɵelementStart(62, \"strong\", 26);\n      i0.ɵɵtext(63, \"log in here\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.singnUpForm);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(15, _c0, ctx.nameValidation, !ctx.nameValidation));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.nameValidation);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(18, _c0, ctx.lastNameValidation, !ctx.lastNameValidation));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.lastNameValidation);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(21, _c0, ctx.companyValidation, !ctx.companyValidation));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.companyValidation);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(24, _c0, ctx.usernameValidation, !ctx.usernameValidation));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.usernameValidation);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(27, _c0, ctx.mailValidation, !ctx.mailValidation));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.mailValidation);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(30, _c0, ctx.passwordValidation, !ctx.passwordValidation));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.passwordValidation);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(33, _c0, ctx.passwordValidation, !ctx.passwordValidation));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.confPasswordValidation);\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgIf, i3.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","RegisterComponent","constructor","fb","ngOnInit","singnUpForm","initForm","nameValidation","get","invalid","touched","lastNameValidation","companyValidation","mailValidation","usernameValidation","passwordValidation","confPasswordValidation","value","console","log","onSubmit","group","name","required","pattern","lastName","company","mail","username","password","confPassword","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/ing_desarrollo/Escritorio/Maria-login/log-maria/src/app/components/register/register.component.ts","/home/ing_desarrollo/Escritorio/Maria-login/log-maria/src/app/components/register/register.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit{\n  singnUpForm!: FormGroup<any>;\n  \n  constructor(\n    private readonly fb: FormBuilder\n  ){ }\n\n  ngOnInit():void {\n    this.singnUpForm = this.initForm();\n  }\n\n  get nameValidation(){\n    return this.singnUpForm.get('name')?.invalid && this.singnUpForm.get('name')?.touched;\n  }\n\n  get lastNameValidation(){\n    return this.singnUpForm.get('lastName')?.invalid && this.singnUpForm.get('lastName')?.touched;\n  }\n\n  get companyValidation(){\n    return this.singnUpForm.get('company')?.invalid && this.singnUpForm.get('company')?.touched;\n  }\n\n  get mailValidation(){\n    return this.singnUpForm.get('mail')?.invalid && this.singnUpForm.get('mail')?.touched;\n  }\n\n  get usernameValidation(){\n    return this.singnUpForm.get('username')?.invalid && this.singnUpForm.get('username')?.touched;\n  }\n\n  get passwordValidation(){\n    return this.singnUpForm.get('password')?.invalid && this.singnUpForm.get('password')?.touched;\n  }\n\n  get confPasswordValidation(){\n    return function(){if(this.singnUpForm.get('password')?.value === this.singnUpForm.get('confpassword')?.value){\n        console.log(\"Hola Mundo\");\n        return false\n      }\n    }\n  }\n\n  onSubmit():void{\n    console.log(\"form => Enviado\", this.singnUpForm)\n  }\n\n  initForm():any {\n    return this.fb.group(\n      {\n        name: ['', [Validators.required, Validators.pattern(/^[a-zA-ZÁ-ÿ\\s]{4,40}$/)]],\n        lastName: ['', Validators.required, Validators.pattern(/^[a-zA-ZÁ-ÿ\\s]{4,40}$/)],\n        company: ['', [Validators.required, Validators.pattern(/^[a-zA-ZÁ-ÿ0-9\\.\\ ]{2,15}$/)]],\n        mail: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/)]],\n        username: ['',[Validators.required, Validators.pattern(/^[a-zA-Z0-9\\_\\-]{4,15}$/)]],\n        password: ['',[Validators.required, Validators.pattern(/^[a-zA-Z0-9\\_\\-\\#\\.\\*\\@]{4,15}$/)]],\n        confPassword: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9\\_\\-\\#\\.\\*\\@]{4,15}$/)]]\n      }\n    )\n  }\n\n \n}\n","<div id=\"record\" class=\"d-flex justify-content-center align-items-center\">\n    <div class=\"col-8 mx-auto rounded pt-3 pb-3\" id=\"sign-up\">\n        <form id=\"register\" [formGroup]=\"singnUpForm\" (ngSubmit)=\"onSubmit()\">\n            <h2 class=\"text-center\">SINGN UP</h2>\n            <ul class=\"d-flex flex-row px-0\">\n                <div class=\"px-0 container-fluid text-center mt-4 mb-4 mx-auto\">\n                    <li class=\"list-group-item\" id=\"input\">\n                        <label for=\"name\" class=\"text-center\">Name</label>\n                        <input class=\"rounded-bottom\" type=\"text\" placeholder=\"Name\" name=\"name\" id=\"name\" formControlName=\"name\">\n                        <i [ngClass]=\"{'bi bi-x-circle-fill red':nameValidation,'bi bi-check-circle-fill green':!nameValidation}\"></i>\n                        <br>\n                        <small *ngIf=\"nameValidation\" class=\"text-warning\">Do not use special characters (#, $, *, etc.) or type more than 4 and less than 40 characters</small>\n                    </li>\n                    <li class=\"list-group-item\" id=\"input\">\n                        <label for=\"lastName\" class=\"text-center\">Last Name</label>\n                        <input class=\"rounded-bottom\" type=\"text\" placeholder=\"Last Name\" name=\"lastName\" id=\"lastName\" formControlName=\"lastName\">\n                        <i [ngClass]=\"{'bi bi-x-circle-fill red':lastNameValidation,'bi bi-check-circle-fill green':!lastNameValidation}\"></i>\n                        <br>\n                        <small *ngIf=\"lastNameValidation\" class=\"text-warning\">Do not use special characters (#, $, *, etc.) or type more than 4 and less than 40 characters</small>\n                    </li>\n                    <li class=\"list-group-item\" id=\"input\">\n                        <label for=\"company\" class=\"text-center\">Company</label>\n                        <input class=\"rounded-bottom\" type=\"text\" placeholder=\"Company\" name=\"company\" id=\"company\" formControlName=\"company\">\n                        <i [ngClass]=\"{'bi bi-x-circle-fill red':companyValidation,'bi bi-check-circle-fill green':!companyValidation}\"></i>\n                        <br>\n                        <small *ngIf=\"companyValidation\" class=\"text-warning\">Please do not use special characters (#, $, *, etc.) or type more than 2 characters</small>\n                    </li>\n                    <li class=\"list-group-item\" id=\"input\">\n                        <label for=\"username\" class=\"text-center\">Username</label>\n                        <input class=\"rounded-bottom\" type=\"text\" placeholder=\"Username\" name=\"user_name\" id=\"username\" formControlName=\"username\">\n                        <i [ngClass]=\"{'bi bi-x-circle-fill red':usernameValidation,'bi bi-check-circle-fill green':!usernameValidation}\"></i>\n                        <br>\n                        <small *ngIf=\"usernameValidation\" class=\"text-warning\">Username is invalid, please do not use special characters (#, $, *, etc.) or type more than 4 and less than 15 characters</small>\n                    </li>\n                </div>\n                <div class=\"px-0 container-fluid text-center mt-4 mb-4 mx-auto\">\n                    <li class=\"list-group-item\" id=\"input\">\n                        <label for=\"mail\" class=\"text-center\">E-Mail</label>\n                        <input class=\"rounded-bottom\" type=\"text\" placeholder=\"E-mail\" name=\"mail\" id=\"mail\" formControlName=\"mail\">\n                        <i [ngClass]=\"{'bi bi-x-circle-fill red':mailValidation,'bi bi-check-circle-fill green':!mailValidation}\"></i>\n                        <br>\n                        <small *ngIf=\"mailValidation\" class=\"text-warning\">Verify your e-mail</small>\n                    </li>\n                    <li class=\"list-group-item\" id=\"input\">\n                        <label for=\"user_password\" class=\"text-center \">Password</label>\n                        <input class=\"rounded-bottom\" type=\"password\" placeholder=\"Password\" name=\"user_password\" id=\"password\" formControlName=\"password\">\n                        <i [ngClass]=\"{'bi bi-x-circle-fill red':passwordValidation,'bi bi-check-circle-fill green':!passwordValidation}\"></i>\n                        <br>\n                        <small *ngIf=\"passwordValidation\" class=\"text-warning\">The password is invalid, try a password greater than 4 and less than 15 characters</small>\n                    </li>\n                    <li class=\"list-group-item\" id=\"input\">\n                        <label for=\"confPass\" class=\"text-center\">Confirm your Password</label>\n                        <input class=\"rounded-bottom\" type=\"password\" placeholder=\"Confirm your Password\" name=\"confPassword\" id=\"confPassword\" formControlName=\"confPassword\">\n                        <i [ngClass]=\"{'bi bi-x-circle-fill red':passwordValidation,'bi bi-check-circle-fill green':!passwordValidation}\"></i>\n                        <br>\n                        <small *ngIf=\"confPasswordValidation\" class=\"text-warning\">The password is invalid, try a password greater than 4 and less than 15 characters</small>\n                    </li>\n                    <li class=\"list-group-item\">\n                        <input class=\"mx-auto d-block\" type=\"submit\" value=\"SEND\" name=\"send\">\n                    </li>\n                </div>  \n            </ul>\n            <div class=\"redirect\">\n                <p class=\"text-center\">If you already have an account, <strong role=\"button\" class=\"text-decoration-underline\" routerLink=\"/login\">log in here</strong></p>\n            </div>\n        </form>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}